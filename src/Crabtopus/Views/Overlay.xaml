<Window x:Class="Crabtopus.Views.Overlay"
        x:ClassModifier="internal"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d"
        ResizeMode="NoResize"
        WindowStyle="None"
        Topmost="True"
        Title="Overlay" Height="35" Width="130"
        xmlns:vm="clr-namespace:Crabtopus.ViewModels"
        xmlns:views="clr-namespace:Crabtopus.Views"
        d:DataContext="{d:DesignInstance Type=vm:OverlayViewModel, IsDesignTimeCreatable=False}">
    <Window.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#3949ab" />
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#6f74dd" />
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#00227b" />
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4" />
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383" />
        <Style x:Key="MyButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Foreground" Value="#ffffff" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="FontSize" Value="16" />
            <Setter Property="FontFamily" Value="pack://application:,,,/Resources/#Righteous" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid SnapsToDevicePixels="true">
                            <Rectangle x:Name="BackgroundVisual" Fill="{TemplateBinding Background}" />
                            <Rectangle x:Name="PressedVisual" Fill="{DynamicResource Button.Pressed.Background}" Opacity="0" />
                            <Rectangle x:Name="DisabledVisual" Fill="{DynamicResource Button.Disabled.Background}" Opacity="0" />
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true" />
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Opacity" TargetName="BackgroundVisual" Value="1" />
                                <Setter Property="Fill" TargetName="BackgroundVisual" Value="{DynamicResource Button.MouseOver.Background}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Opacity" TargetName="PressedVisual" Value="1" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}" />
                                <Setter Property="Opacity" TargetName="DisabledVisual" Value="1" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <Grid>
        <Button x:Name="PrimaryButton" Style="{StaticResource MyButtonStyle}" Content="{Binding Title}" Command="{Binding ShowPopupCommand}"></Button>

        <Popup x:Name="ContentPopup" 
               PlacementTarget="{Binding ElementName=PrimaryButton}" Placement="Bottom" AllowsTransparency="True" 
               StaysOpen="False"
               IsOpen="{Binding DisplayPopup, Mode=TwoWay}">
            <views:DecksLoader></views:DecksLoader>
        </Popup>
    </Grid>
</Window>
